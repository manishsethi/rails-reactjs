{
  "name": "ammo",
  "description": "HTTP Range processing utilities",
  "version": "2.0.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/ammo"
  },
  "main": "lib/index.js",
  "keywords": [
    "http",
    "range",
    "utilities"
  ],
  "engines": {
    "node": ">=4.0.0"
  },
  "dependencies": {
    "boom": "4.x.x",
    "hoek": "4.x.x"
  },
  "devDependencies": {
    "code": "4.x.x",
    "lab": "11.x.x",
    "wreck": "10.x.x"
  },
  "scripts": {
    "test": "lab -a code -t 100 -L",
    "test-cov-html": "lab -a code -r html -o coverage.html"
  },
  "license": "BSD-3-Clause",
  "readme": "# ammo\n\nHTTP Range processing utilities.\n\n[![Npm Version](https://img.shields.io/npm/v/ammo.svg)](https://npmjs.com/package/ammo)\n[![Build Status](https://secure.travis-ci.org/hapijs/ammo.png)](http://travis-ci.org/hapijs/ammo)\n\nLead Maintainer - [Eran Hammer](https://github.com/hueniverse)\n\n## Usage\n\n```js\n// basic usage\nconst range = Ammo.header('bytes=1-5', 10);\n// range --> [{ from: 1, to: 5 }]\n\n// multiple ranges\nconst range = Ammo.header('bytes=1-5,7-10', 10);\n// range --> [{ from: 1, to: 5 }, { from: 7, to: 9 }]\n\n// streams (get range within a `source`)\nconst range = Ammo.header('bytes=1000-4000', 5000);\nconst stream = new Ammo.Stream(range[0]);\nWreck.read(source.pipe(stream), {}, (err, buffer) => {\n    // buffer is the portion of source within range\n\n});\n```\n\n## API\n\n### `header(header, length)`\n\nParses the range from a HTTP header.\n\n* `header` - A string in the form of `bytes=from-to`, where `from` and `to` are\nintegers specifying the range. Both are optional. Multiple ranges can be passed\nas a comma delimited list.\n* `length` - A positive integer specifying the maximum length the range can\ncover. If a `to` value passed in the `header` string is greater than `length`,\nthe `to` value is set as `length - 1`.\n\nReturns an array of objects with the properties `from` and `to`, which specify\nthe beginning and ending of the range. Overlapping ranges are combined into one\nobject. Returns `null` for invalid input.\n\n### `new Ammo.Stream(range)`\n\nCreates a [`Transform Stream`](https://nodejs.org/api/stream.html) that extracts\nthe portion of a piped in stream within `range`.\n* `range` - an object with the properties `from` and `to` that specify the range\nof the piped in stream to read. Objects returned by `Ammo.header` can be passed\ninto `range`.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hapijs/ammo/issues"
  },
  "_id": "ammo@2.0.3",
  "dist": {
    "shasum": "8c306b068f33c31ecf45da004c8591a193805414"
  },
  "_from": "ammo@2.x.x",
  "_resolved": "https://registry.npmjs.org/ammo/-/ammo-2.0.3.tgz"
}
