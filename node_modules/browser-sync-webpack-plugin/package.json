{
  "name": "browser-sync-webpack-plugin",
  "version": "1.1.3",
  "description": "BrowserSync and Webpack integration",
  "keywords": [
    "webpack",
    "webpack-plugin",
    "browsersync",
    "browser-sync",
    "livereload",
    "serve"
  ],
  "main": "index.js",
  "dependencies": {
    "lodash": "4.x.x"
  },
  "devDependencies": {},
  "peerDependencies": {
    "browser-sync": "2.x.x",
    "webpack": "1 || 2 || ^2.0.0-beta || ^2.1.0-beta"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Va1/browser-sync-webpack-plugin.git"
  },
  "homepage": "https://github.com/Va1/browser-sync-webpack-plugin",
  "author": {
    "name": "Valentyn Barmashyn",
    "email": "valpreacher@gmail.com"
  },
  "license": "MIT",
  "private": false,
  "readme": "# [BrowserSync](http://www.browsersync.io/) plugin for [Webpack](http://webpack.github.io/)\n\nEasily use BrowserSync in your Webpack project.\n\n## Install:\n\n```bash\n$ npm install --save-dev browser-sync-webpack-plugin\n```\n\n## Usage:\n\nBrowserSync will start only when you run Webpack in [watch mode](http://webpack.github.io/docs/tutorials/getting-started/#watch-mode):\n\n```bash\n$ webpack --watch\n```\n\n### Basic:\n\nIf you're not using Webpack Dev Server, you can make BrowserSync to serve your project.\nThe setup is pretty easy: just pass the [BrowserSync options](http://www.browsersync.io/docs/options/) to the plugin as the first argument.\n\nIn your `webpack.config.js`:\n\n```javascript\nvar BrowserSyncPlugin = require('browser-sync-webpack-plugin');\n\nmodule.exports = {\n  // ...\n  plugins: [\n    new BrowserSyncPlugin({\n      // browse to http://localhost:3000/ during development,\n      // ./public directory is being served\n      host: 'localhost',\n      port: 3000,\n      server: { baseDir: ['public'] }\n    })\n  ]\n}\n```\n\n### Advanced:\n\nThe advanced usage is about using [Webpack Dev Server](https://github.com/webpack/webpack-dev-server) with BrowserSync in order to use awesome features of both.\n\nTo achieve this, BrowserSync offers the [proxy](http://www.browsersync.io/docs/options/#option-proxy) option.\nSo, basically, you are about to proxy the output from the Webpack Dev Server through BrowserSync to get the best out of both.\n\nIn your `webpack.config.js`:\n\n```javascript\nvar BrowserSyncPlugin = require('browser-sync-webpack-plugin');\n\nmodule.exports = {\n  // ...\n  plugins: [\n    new BrowserSyncPlugin(\n      // BrowserSync options\n      {\n        // browse to http://localhost:3000/ during development\n        host: 'localhost',\n        port: 3000,\n        // proxy the Webpack Dev Server endpoint\n        // (which should be serving on http://localhost:3100/)\n        // through BrowserSync\n        proxy: 'http://localhost:3100/'\n      },\n      // plugin options\n      {\n        // prevent BrowserSync from reloading the page\n        // and let Webpack Dev Server take care of this\n        reload: false\n      }\n    )\n  ]\n}\n```\n\nAnother plugin options supported are `name` - BrowserSync [instance name](http://www.browsersync.io/docs/api/#api-name)\nand `callback` - BrowserSync [instance init callback](http://www.browsersync.io/docs/api/#api-cb).\n\n## Contributing:\n\nFeel free to open issues to propose stuff and participate. Pull requests are also welcome.\n\n## Licence:\n\n[MIT](http://en.wikipedia.org/wiki/MIT_License)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Va1/browser-sync-webpack-plugin/issues"
  },
  "_id": "browser-sync-webpack-plugin@1.1.3",
  "dist": {
    "shasum": "37763d1caea4b5d27ac1a263ff4205d38571d824"
  },
  "_from": "browser-sync-webpack-plugin@",
  "_resolved": "https://registry.npmjs.org/browser-sync-webpack-plugin/-/browser-sync-webpack-plugin-1.1.3.tgz"
}
